ShaderNodeDefinitions{ 
    ShaderNodeDefinition VertexSkinningInstancing {      
        Type: Vertex

        Shader GLSL110: Common/MatDefs/ShaderNodes/Basic/VertexSkinningInstancing.vert
        
        Documentation{
                        
        }

        Input {
       //   bool UseInstancing
          mat4 ViewMatrix
          mat4 ViewProjectionMatrix
          mat4 inInstanceData : INSTANCING
          mat4 WorldMatrix : !INSTANCING
          mat4 WorldViewMatrix : !INSTANCING
          mat4 WorldViewProjectionMatrix : !INSTANCING
          mat3 NormalMatrix
          vec3 inPosition
          vec3 inNormal
          vec2 inTexCoord
          vec2 inTexCoord2 : SEPARATE_TEXCOORD
          vec4 inVertexColor : VERTEX_COLOR
          vec4 inTangent
          vec3 CameraPosition : USE_REFLECTION
          vec3 FresnelParams : USE_REFLECTION
          vec3 AmbientLightColor

          vec4 inHWBoneWeight : NUM_BONES
          vec4 inHWBoneIndex : NUM_BONES
          mat4 m_BoneMatrices[NUM_BONES] : NUM_BONES
        }
        Output {
          vec2 texCoord
          vec2 texCoord2 : SEPARATE_TEXCOORD
          vec3 vNormal
          vec3 vPos
          vec3 vTangent : NORMALMAP
          vec3 vBinormal : NORMALMAP
          vec4 refVec : USE_REFLECTION
          vec4 outVertexColor : VERTEX_COLOR
          vec4 worldViewProjectionPosition
        }
    }
}