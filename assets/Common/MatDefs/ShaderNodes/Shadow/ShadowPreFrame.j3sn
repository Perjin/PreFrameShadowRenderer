ShaderNodeDefinitions{
    ShaderNodeDefinition ShadowPreFrameFragment {      
        Type: Fragment
        Shader GLSL100: Common/MatDefs/ShaderNodes/Shadow/ShadowPreFrame15.frag
        Documentation{            
            This Node is responsible for computing shadows of a directional light source.                
            @input projCoord0
            @input projCoord1
            @input projCoord2
            @input projCoord3
            @input Splits
            @input FadeInfo
            @input ShadowMap0
            @input ShadowMap1
            @input ShadowMap2
            @input ShadowMap3
            @input shadowPosition
            @input shadowMapSize
            @output shadowIntensity
        }
        Input {
            
            vec4 projCoord0
            vec4 projCoord1
            vec4 projCoord2
            vec4 projCoord3
            vec4 projCoord4
            vec4 projCoord5
            vec4 Splits
            vec2 FadeInfo
            float shadowMapSize
            sampler2DShadow ShadowMap0
            sampler2DShadow ShadowMap1
            sampler2DShadow ShadowMap2
            sampler2DShadow ShadowMap3
            sampler2DShadow ShadowMap4
            sampler2DShadow ShadowMap5
            vec4 worldPos

            float shadowPosition
            vec3 LightPos
        }
        Output {
            float shadowIntensity
        }
    }
    ShaderNodeDefinition ShadowPreFrameVertex {      
        Type: Vertex
        Shader GLSL100: Common/MatDefs/ShaderNodes/Shadow/ShadowPreFrame15.vert
        Documentation{
            @input LightViewProjectionMatrix0
            @input LightViewProjectionMatrix1
            @input LightViewProjectionMatrix2
            @input LightViewProjectionMatrix3
            @input worldPos
            @output projCoord0
            @output projCoord1
            @output projCoord2
            @output projCoord3
        }
        Input {
            mat4 LightViewProjectionMatrix0
            mat4 LightViewProjectionMatrix1
            mat4 LightViewProjectionMatrix2
            mat4 LightViewProjectionMatrix3
            mat4 LightViewProjectionMatrix4
            mat4 LightViewProjectionMatrix5
            vec4 worldPos
        }
        Output {
            
            vec4 projCoord0
            vec4 projCoord1
            vec4 projCoord2
            vec4 projCoord3
            vec4 projCoord4
            vec4 projCoord5
        }
    }
}